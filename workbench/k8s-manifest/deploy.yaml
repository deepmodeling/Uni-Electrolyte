apiVersion: apps/v1
kind: Deployment
metadata:
  name: retro-synthesis-v2
  namespace: launching-workload-service
  labels:
    app: retro-synthesis-v2
spec:
  replicas: 10
  selector:
    matchLabels:
      app: retro-synthesis-v2
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: retro-synthesis-v2
    spec:
      containers:
        - name: app
          image: registry.dp.tech/mlops/workbench/retro-synthesis-v2:lp-0.0.7
          imagePullPolicy: Always
          env:
            - name: PROD_ENV
              value: "true"
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: retro-synthesis-v2-crediential
                  key: redis
            - name: LAUNCHING_APPLICATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: retro-synthesis-v2-crediential
                  key: application_token
          resources:
            requests:
              cpu: 500m
              memory: 200M
            limits:
              cpu: 2
              memory: 4Gi
          ports:
            - containerPort: 8051
              name: dash
              protocol: TCP
          volumeMounts:
            - mountPath: /app-dir
              name: shared-data-volume
              subPath: mlops/var/applications/retro-synthesis
            - mountPath: /shared_data
              name: shared-data-volume
              subPath: mlops
      restartPolicy: Always
      volumes:
        - name: shared-data-volume
          persistentVolumeClaim:
            claimName: jfs-prod
