apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: retro-synthesis
  name: retro-synthesis
  namespace: launching-workload-service
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "200M"
    #    nginx.ingress.kubernetes.io/rewrite-target: /$1
    #    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: app.bohrium.dp.tech
      http:
        paths:
          - backend:
              service:
                name: retro-synthesis-v2
                port:
                  number: 8050
            path: /retro-synthesis/workbench/
            pathType: Prefix
  tls:
    - hosts:
        - app.bohrium.dp.tech
      secretName: tls.bohrium.dp.tech

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app: retro-synthesis-v2
  name: retro-synthesis-v2
  namespace: launching-workload-service
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "200M"
    nginx.ingress.kubernetes.io/rewrite-target: /retro-synthesis/workbench/$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
    - host: app.bohrium.dp.tech
      http:
        paths:
          - backend:
              service:
                name: retro-synthesis-v2
                port:
                  number: 8050
            path: /retro-synthesis-v2/(.*)
            pathType: Prefix
  tls:
    - hosts:
        - app.bohrium.dp.tech
      secretName: tls.bohrium.dp.tech